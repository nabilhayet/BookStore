[{"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/authors/CreateAuthor.js":"1","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/books/CreateBook.js":"2","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/books/ShowBook.js":"3","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/books/EditBook.js":"4","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/index.js":"5","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/Navbar.js":"6","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/authors/ShowAuthor.js":"7","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/Home.js":"8","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/reportWebVitals.js":"9","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/actions/getAuthors.js":"10","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/authors/EditAuthor.js":"11","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/App.js":"12","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/authors/IndexAuthor.js":"13","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/books/IndexBook.js":"14","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/reducers/booksReducer.js":"15","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/actions/getBooks.js":"16","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/books/SearchBook.js":"17"},{"size":2543,"mtime":1610670999654,"results":"18","hashOfConfig":"19"},{"size":2840,"mtime":1610671016057,"results":"20","hashOfConfig":"19"},{"size":1194,"mtime":1610669026943,"results":"21","hashOfConfig":"19"},{"size":4121,"mtime":1610666265247,"results":"22","hashOfConfig":"19"},{"size":1016,"mtime":1610420099217,"results":"23","hashOfConfig":"19"},{"size":957,"mtime":1610663804344,"results":"24","hashOfConfig":"19"},{"size":1254,"mtime":1610668745646,"results":"25","hashOfConfig":"19"},{"size":168,"mtime":1610665832845,"results":"26","hashOfConfig":"19"},{"size":362,"mtime":1609886613753,"results":"27","hashOfConfig":"19"},{"size":255,"mtime":1610420376913,"results":"28","hashOfConfig":"19"},{"size":3204,"mtime":1610666225036,"results":"29","hashOfConfig":"19"},{"size":2228,"mtime":1610658184464,"results":"30","hashOfConfig":"19"},{"size":1434,"mtime":1610836482288,"results":"31","hashOfConfig":"19"},{"size":4108,"mtime":1610864390938,"results":"32","hashOfConfig":"19"},{"size":848,"mtime":1610516776442,"results":"33","hashOfConfig":"19"},{"size":243,"mtime":1610517296541,"results":"34","hashOfConfig":"19"},{"size":1660,"mtime":1610750889102,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bhlux3",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/authors/CreateAuthor.js",[],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/books/CreateBook.js",[],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/books/ShowBook.js",["78"],"import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction ShowBook(props) { \n    const renderSingleBook = props.books.filter(b=> b.id == props.match.params.id) \n    // const getTheAuthor = props.authors.filter(a=> a.id == renderSingleBook[0].author_id)\n      return (\n        <div>\n           <table class=\"content-table\">\n            <thead>\n              <tr>\n              <th>Title</th>\n              <th>Pages</th>\n              <th>Chapters</th>\n              <th>Author First Name</th>\n              <th>Author Last Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n              <td> { renderSingleBook[0].title }</td>\n              <td>  { renderSingleBook[0].pages }</td>\n              <td>   { renderSingleBook[0].chapters }</td>\n              <td> { renderSingleBook[0].author.first_name }</td>\n              <td> { renderSingleBook[0].author.last_name }</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      );\n}\nconst mapStateToProps = (state) => {\n\treturn {\n        books: state.books.books,\n        authors: state.authors.authors\n\t};\n};\nexport default connect(mapStateToProps)(ShowBook);\n",["79","80"],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/books/EditBook.js",["81"],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/index.js",[],["82","83"],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/Navbar.js",[],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/authors/ShowAuthor.js",["84","85"],"import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction ShowAuthor(props) { \n    const renderSingleAuthor = props.authors.filter(a=> a.id == props.match.params.id) \n    const renderBooks = props.books.filter(book => book.author_id == props.match.params.id)\n    const listBooks = renderBooks.map(b => <li>{b.title}</li>)\n      return (\n        <div>\n          <br>\n          </br>\n          <table class=\"content-table\">\n            <thead>\n              <tr>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Contact No</th>\n              <th>Age</th>\n              <th>Books</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n              <td>{ renderSingleAuthor[0].first_name }</td>\n              <td> { renderSingleAuthor[0].last_name }</td>\n              <td> { renderSingleAuthor[0].contact }</td>\n              <td> { renderSingleAuthor[0].age }</td>\n              <td> <ul>{listBooks}</ul></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      );\n}\nconst mapStateToProps = (state) => {\n  \n\treturn {\n    authors: state.authors.authors,\n    books: state.books.books\n\t};\n};\nexport default connect(mapStateToProps)(ShowAuthor);\n","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/Home.js",[],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/reportWebVitals.js",[],["86","87"],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/actions/getAuthors.js",[],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/authors/EditAuthor.js",["88"],"import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport updateAuthor from '../../actions/update'\n\nclass EditAuthor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            firstname: \"\",\n            lastname: \"\",\n            age: \"\",\n            contact: \"\",\n            submittedData: [],\n            gotAuthor: false,\n            id: \"\"\n        }\n    }\n    handleChange = event => {\n        this.setState({\n          [event.target.id]: event.target.value\n        })\n    }\n    handleSubmit =(event) => {\n        event.preventDefault()\n        const author = {first_name: this.state.firstname, last_name: this.state.lastname, age: this.state.age, contact: this.state.contact}\n        this.updateAuthor(author)\n    }\n\n    updateAuthor = (author) => {\n        const configobj = {\n          method: 'PATCH',\n          body: JSON.stringify(author),\n          headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n          }\n        }\n        fetch(`http://localhost:3000/authors/${this.state.id}`,configobj)\n        .then(response => response.json())\n        .then(author => { \n          this.props.updateAuthor(author)\n          this.setState({\n            gotAuthor: true\n          })\n         \n        })\n    }\n\n    getAuthor = () => {\n        const getAuthor = this.props.authors.filter(a=> a.id == this.props.match.params.id) \n        this.setState({\n         firstname: getAuthor[0].first_name,\n         lastname: getAuthor[0].last_name,\n         age: getAuthor[0].age,\n         contact: getAuthor[0].contact,\n         id: getAuthor[0].id \n        })\n    } \n\n    componentDidMount() {\n        this.getAuthor()\n    }\n    render() { \n       return(\n            <div>\n            <form onSubmit={event => this.handleSubmit(event)}>\n            <p>\n            <label>First Name</label>\n            <input type=\"text\" id=\"firstname\" onChange={event => this.handleChange(event)}\n            value={this.state.firstname}/>\n            </p>\n            <p>\n            <label>Last Name</label>\n            <input type=\"text\" id=\"lastname\" onChange={event => this.handleChange(event)}\n            value={this.state.lastname}/>\n            </p>\n            <p>\n            <label>Age</label>\n            <input type=\"number\" id=\"age\" onChange={event => this.handleChange(event)}\n            value={this.state.age}/>\n            </p>\n            <p>\n            <label>Contact</label>\n            <input type=\"number\" id=\"contact\" onChange={event => this.handleChange(event)}\n            value={this.state.contact}/>\n            </p>\n            <input type=\"submit\" class=\"btn\"/>\n            </form>\n            {this.state.gotAuthor && (\n                <Redirect to={`/authors/${this.state.id}`}/>\n            )}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateAuthor: author => { dispatch(updateAuthor(author)) }\n      }\n}\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tauthors: state.authors.authors\n\t};\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(EditAuthor);","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/App.js",[],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/authors/IndexAuthor.js",[],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/books/IndexBook.js",["89","90","91","92","93"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getBooks } from '../../actions/getBooks';\nimport { deleteBook } from '../../actions/deleteBook';\n\nclass IndexBook extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            ids: [],\n            like: 0,\n            likes: [],\n            currentBooks: [], \n            search: '',\n            message: '',\n            Num_Of_Likes: 0,\n            index: 0 \n        }\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state, currentBooks: this.props.books.books\n        })\n    }\n\n    onClick(event){\n        if(this.state.search !== '') {\n            const searchBook = this.state.currentBooks.filter((book) => book.title === this.state.search)\n            if(searchBook.length !== 0) {\n                this.setState({\n                    ...this.state, currentBooks: searchBook\n                })\n            }\n            else {\n                this.setState({\n                    ...this.state, message: 'No Match'\n                })\n            }\n        }\n    }\n\n    onChange(event){\n        this.setState({\n            search: event.target.value\n        })\n    }\n\n\thandleDeleteBook = (event) => {\n        event.preventDefault()\n        this.props.deleteBook(event.target.id)\n        this.componentDidMount()\n    }\n\n    handleClear(event) {\n        this.setState({\n            ...this.state, currentBooks: this.props.books.books, message: '', search: ''\n        })\n    }\n\n    handleLike = (event) => {\n        let findID = this.state.ids.includes(event.target.id)\n        if(findID) {\n            let i = this.state.likes.findIndex(obj => obj.id == event.target.id);\n            this.setState({\n                ...this.state,\n                Num_Of_Likes: this.state.likes[i].likee +=1,\n                \n            })\n        }\n        else {\n            const likeObj = { id: event.target.id, likee: this.state.like + 1 }\n            this.state.likes.push(likeObj)\n            let v = this.state.likes.findIndex(obj => obj.id == event.target.id);\n\n            this.setState({\n                ...this.state,\n                Num_Of_Likes:  this.state.likes[v].likee,\n                ids: event.target.id \n            })  \n        }\n    }\n    \n    render() {\n\t\tconst link = {\n\t\t\twidth: '100px',\n\t\t\tpadding: '12px',\n\t\t\tmargin: '0 6px 6px',\n\t\t\tbackground: 'burlywood',\n\t\t\tcolor: 'brown'\n        }\n        // {this.state.likes[this.state.likes.findIndex(obj => obj.id == book.id)].likee}\n\t\tif (this.props.books.books.length > 0) {\n\t\t\tconst allBooks = this.state.currentBooks.map((book) => {\n\t\t\t\treturn(\n\t\t\t\t\t<li key={book.id}><Link key={book.id} style={link} to={`/books/${book.id}`}>{book.title}</Link>\n\t\t\t\t\t\t<Link key={book.id} style={link} to={`/books/${book.id}/edit`}><button>UPDATE</button></Link>\n\t\t\t\t\t\t<button id={book.id} style={link} onClick={this.handleDeleteBook}>DELETE</button>\n                        <button id={book.id} onClick={event => this.handleLike(event)}>{(this.state.likes.findIndex(obj => obj.id == book.id)) === -1 ? 0 : this.state.likes[this.state.likes.findIndex(obj => obj.id == book.id)].likee} LIKE</button>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t\t\t\n            });\n            \n\t\treturn ( <div>\n                    {this.state.message}<br></br>\n                    <input type=\"text\" placeholder=\"search\" value={this.state.search} onChange={(event) => this.onChange(event)}/>\n                    <button onClick={(event) => this.onClick(event)}>Search</button> \n                    <button onClick={event => this.handleClear(event)}>Clear</button> \n                    {allBooks}\n                   \n                </div>\n                )\n\t\t} \n\t\telse {\n\t\t\treturn <div>No Books</div>;\n\t\t}\n\t}\n}\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tbooks: state.books\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetBooks: () => { dispatch(getBooks()) },\n\t\tdeleteBook: (id) => {dispatch(deleteBook(id))}\n\t  }\n  }\nexport default connect(mapStateToProps,mapDispatchToProps)(IndexBook);","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/reducers/booksReducer.js",["94"],"export default function booksReducer(state = { books: [] }, action) {\n  let idx;\n  switch (action.type) {\n      case 'START_ADDING_BOOKS':\n          return {...state, books: [...state.books]}\n      case \"ADD_BOOK\":\n          return {...state, books: [...state.books, action.book]};\n      case \"GET_BOOKS\":\n          return {...state, books: action.books};\n      case \"UPDATE_BOOK\":\n          idx = state.books.findIndex(book => book.id === action.book.id);\n          const newState = [...state.books]\n          newState.splice(idx, 1, action.book);\n          return {...state, books: newState }\n      case \"DELETE_BOOK\":\n          idx = state.books.findIndex(book => book.id == action.id);\n          return {...state, books: [...state.books.slice(0, idx), ...state.books.slice(idx + 1)]};\n      default:\n          return state;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/actions/getBooks.js",[],"/Users/nabil/Documents/Flatiron/code/projects/BookStore/bookstore-frontend/src/components/books/SearchBook.js",["95"],{"ruleId":"96","severity":1,"message":"97","line":5,"column":58,"nodeType":"98","messageId":"99","endLine":5,"endColumn":60},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"96","severity":1,"message":"97","line":71,"column":58,"nodeType":"98","messageId":"99","endLine":71,"endColumn":60},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"96","severity":1,"message":"97","line":5,"column":62,"nodeType":"98","messageId":"99","endLine":5,"endColumn":64},{"ruleId":"96","severity":1,"message":"97","line":6,"column":67,"nodeType":"98","messageId":"99","endLine":6,"endColumn":69},{"ruleId":"100","replacedBy":"106"},{"ruleId":"102","replacedBy":"107"},{"ruleId":"96","severity":1,"message":"97","line":51,"column":62,"nodeType":"98","messageId":"99","endLine":51,"endColumn":64},{"ruleId":"96","severity":1,"message":"97","line":66,"column":62,"nodeType":"98","messageId":"99","endLine":66,"endColumn":64},{"ruleId":"108","severity":1,"message":"109","line":69,"column":31,"nodeType":"110","endLine":69,"endColumn":50},{"ruleId":"96","severity":1,"message":"97","line":76,"column":62,"nodeType":"98","messageId":"99","endLine":76,"endColumn":64},{"ruleId":"96","severity":1,"message":"97","line":101,"column":131,"nodeType":"98","messageId":"99","endLine":101,"endColumn":133},{"ruleId":"96","severity":1,"message":"97","line":101,"column":215,"nodeType":"98","messageId":"99","endLine":101,"endColumn":217},{"ruleId":"96","severity":1,"message":"97","line":16,"column":55,"nodeType":"98","messageId":"99","endLine":16,"endColumn":57},{"ruleId":"111","severity":1,"message":"112","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],["115"],["116"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]